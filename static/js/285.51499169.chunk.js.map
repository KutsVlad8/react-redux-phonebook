{"version":3,"file":"static/js/285.51499169.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/ContactsFiter/ContactsFiter.styled.jsx","components/ContactsFiter/ContactsFiter.jsx","pages/Phonebook/Phonebook.styled.jsx","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => {\n  return state.contacts.contacts;\n};\nexport const selectLoading = state => {\n  return state.isLoading;\n};\nexport const selectError = state => {\n  return state.error;\n};\n\nexport const selectFilter = state => state.filter.query;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  }\n);\n","import Styled from '@emotion/styled';\n\nexport const Form = Styled.form`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`;\n\nexport const Label = Styled.label`\n    margin-bottom: 5px;\n    color: #20b2aa;\n\n`;\n\nexport const Input = Styled.input`\n    display: block;\n    width: 350px;\n    height: 30px;\n    margin-bottom: 15px;\n    border: none;\n    border-bottom: 2px solid #20b2aa;\n    color: #20b2aa;\n\n&:focus{\n    outline:none;\n\tborder: 1px solid #20b2aa;\n    border-radius:5px;\n   \n}\n\n &::placeholder {\n    font: inherit;\n    font-size: 16px;\n    color:#20b2aa;\n  }\n`;\n\nexport const Button = Styled.button`\ndisplay: inline-block;\n    height: 28px;\n    background-color: white;\n    color: #20b2aa;\n    border: 1px solid #20b2aa;\n    border-radius: 3px;\n    cursor: pointer;\n    outline: none;\n\n&:focus,&:hover{\n      border: none;\n\tbackground-color: #2f4f4f;\n    color: white;\n\t\n}\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form, Input, Button, Label } from './ContactForm.styled';\nimport { nanoid } from '@reduxjs/toolkit';\nimport Notiflix from 'notiflix';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChangeInput = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const contact = { name, number };\n\n    const oldContact = contacts.map(oldContact =>\n      oldContact.name.toLowerCase()\n    );\n\n    if (oldContact.includes(name.toLowerCase())) {\n      return Notiflix.Notify.failure(`${name} is alredy in contacts`);\n    }\n    dispatch(addContact(contact));\n    Notiflix.Notify.success(`Contact ${name}  has been added `);\n    form.reset();\n  };\n\n  const nameInputNameId = nanoid(2);\n  const nameInputNumberId = nanoid(2);\n\n  return (\n    <Form onSubmit={handleChangeInput}>\n      <Label htmlFor={nameInputNameId}>Name</Label>\n      <Input\n        id={nameInputNameId}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Label htmlFor={nameInputNumberId}>Number</Label>\n      <Input\n        id={nameInputNumberId}\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"number\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <Button type=\"submit\">add contact</Button>\n    </Form>\n  );\n};\n","import Styled from '@emotion/styled';\n\nexport const ContactList = Styled.ul`\nwidth: 350px;\nlist-style: none;\npadding: 0;\nmargin-top: 0;\nmargin-left: auto;\nmargin-right: auto;\n// border: 1px solid #20b2aa;\nborder-radius: 5px;\npadding: 5px;\nbox-shadow: rgb(26 25 24 / 50%) 2px 2px 5px 2px;\n\n`;\n\nexport const ContactListItem = Styled.li`\ndisplay: flex;\nalign-items: center;\nmargin-bottom: 8px;\n`;\n\nexport const Text = Styled.p`\nmargin: 0;\ncolor: #20b2aa;\n`;\n\nexport const Button = Styled.button`\ndisplay: inline-block;\nheight: 28px;\nmargin-left:10px;\nbackground-color: white;\n\ncolor: #20b2aa;\nborder: 1px solid #20b2aa;\nborder-radius: 3px;\ncursor: pointer;\noutline: none;\n\n&:focus,&:hover{\n\tborder: none;\n\tbackground-color: #2f4f4f;\n    color: white;\n\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport {\n  ContactList,\n  ContactListItem,\n  Text,\n  Button,\n} from './ContactsList.styled';\nimport Notiflix from 'notiflix';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactsList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = contact => {\n    dispatch(deleteContact(contact.id));\n    Notiflix.Notify.info(`Contact ${contact.name} has been deleted`);\n  };\n\n  return (\n    <ContactList>\n      {visibleContacts.map(contact => (\n        <ContactListItem key={contact.id}>\n          <Text>\n            {contact.name} : {contact.number}\n          </Text>\n          <Button onClick={() => onDeleteContact(contact)}>delete</Button>\n        </ContactListItem>\n      ))}\n    </ContactList>\n  );\n};\n","import Styled from '@emotion/styled';\n\nexport const Label = Styled.label`\nmargin-bottom: 5px;\nmargin-left: 24px;\ncolor:#20b2aa;\n`;\n\nexport const Input = Styled.input`\ndisplay: block;\nwidth: 350px;\nheight: 30px;\nmargin-bottom: 20px;\nmargin-left: auto;\nmargin-right: auto;\nborder: none;\nborder-bottom: 2px solid #20b2aa;\ncolor: #20b2aa;\n\n&:focus{\n    outline:none;\n\tborder: 1px solid #20b2aa;\n    border-radius:5px;\n   \n}\n\n &::placeholder {\n    font: inherit;\n    font-size: 16px;\n    color:#20b2aa;\n  }\n\n`;\n","import { useDispatch } from 'react-redux';\nimport { filter } from 'redux/contacts/filterSlice';\nimport { Input } from './ContactsFiter.styled';\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilterInput = event => {\n    dispatch(filter(event.target.value));\n  };\n\n  return (\n    <>\n      <Input\n        type=\"text\"\n        placeholder=\"search\"\n        onChange={handleChangeFilterInput}\n      />\n    </>\n  );\n};\n","import Styled from '@emotion/styled';\n\nexport const Container = Styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\npadding: 20px;\n\n    \n`;\n\nexport const Head = Styled.h1`\ntext-align: center;\nmargin-bottom: 0;\ncolor:#20b2aa;\n`;\nexport const Title = Styled.h2`\n    margin-top: 0;\n    text-align: center;\n    color:#20b2aa;\n`;\n\nexport const FormContainer = Styled.div`\n    width: 400px;\n    margin-bottom: 20px;\n    padding: 10px;\n    height: min-content;\n    // border: 1px solid #20b2aa;\n    border-radius: 5px;\n    box-shadow: rgb(26 25 24 / 50%) 2px 2px 5px 2px;\n`;\n\nexport const LeftContainer = Styled.div`\nwidth: 400px;\n// border: 1px solid #20b2aa;\npadding: 10px;\nmargin-bottom: 50px;\nborder-radius: 5px;\nbox-shadow: rgb(26 25 24 / 50%) 2px 2px 5px 2px;\n`;\n\nexport const Template = Styled.p`\ntext-align: center;\nmargin-bottom: 0;\ncolor:#20b2aa;\nmargin: 0;\nfont-size: 30px;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactsFilter } from 'components/ContactsFiter/ContactsFiter';\nimport {\n  Container,\n  FormContainer,\n  Head,\n  LeftContainer,\n  Template,\n  Title,\n} from './Phonebook.styled';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Head>PhoneBook</Head>\n      <Container>\n        <FormContainer>\n          <ContactForm />\n        </FormContainer>\n\n        {contacts.length > 0 ? (\n          <LeftContainer>\n            <Title>Contacts</Title>\n            <ContactsFilter />\n\n            <ContactsList />\n          </LeftContainer>\n        ) : (\n          <Template>add new contact</Template>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Phonebook;\n"],"names":["selectContacts","state","contacts","selectVisibleContacts","createSelector","filter","query","normalizeFilter","toLowerCase","contact","name","includes","Form","Styled","Label","Input","Button","ContactForm","useSelector","dispatch","useDispatch","nameInputNameId","nanoid","nameInputNumberId","onSubmit","event","preventDefault","form","target","elements","value","number","map","oldContact","Notiflix","addContact","reset","htmlFor","id","type","placeholder","title","required","ContactList","ContactListItem","Text","ContactsList","visibleContacts","onClick","deleteContact","onDeleteContact","ContactsFilter","onChange","Container","Head","Title","FormContainer","LeftContainer","Template","useEffect","fetchContacts","length"],"sourceRoot":""}